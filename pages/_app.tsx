/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable no-plusplus */
import React from 'react'
import type { ReactElement, ReactNode } from 'react'
import Head from 'next/head'
import type { AppProps } from 'next/app'
import type { NextPage } from 'next'
import 'pink-lava-ui/index.css'
import '../src/styles/globals.css'
import { useTitle } from 'src/hooks'
import { QueryClient, QueryClientProvider } from 'react-query'
import { AppProvider } from 'src/contexts'
import { ICLogo } from 'src/assets'
import UserContextProvider from 'src/contexts/UserContext'
import SideBarContextProvider from 'src/contexts/SidebarContext'
import StructureOrgContextProvider from 'src/contexts/StructureOrgContext'
import AppLayout from 'src/containers/Layouts/AppLayout'
import { ReactQueryDevtools } from 'react-query/devtools'
import { ReactFlowProvider } from 'reactflow'
import 'reactflow/dist/style.css'

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
  // eslint-disable-next-line no-unused-vars
  getLayout?: (page: ReactElement) => ReactNode
}

type AppPropsWithLayout = AppProps & {
  Component: NextPageWithLayout
}

export default function MyApp({ Component, pageProps }: AppPropsWithLayout) {
  const [queryClient] = React.useState(() => new QueryClient())
  const title = useTitle()

  return (
    <QueryClientProvider client={queryClient}>
      <ReactFlowProvider>
        <AppProvider>
          <Head>
            <title>HC - {title}</title>
            <meta name="description" content="Generated by HC" />
            <link rel="icon" href={ICLogo.src} />
          </Head>
          <UserContextProvider>
            <SideBarContextProvider>
              <StructureOrgContextProvider>
                <AppLayout Component={Component} pageProps={pageProps} />
              </StructureOrgContextProvider>
            </SideBarContextProvider>
          </UserContextProvider>
        </AppProvider>
      </ReactFlowProvider>
      <ReactQueryDevtools initialIsOpen={false} />
    </QueryClientProvider>
  )
}
